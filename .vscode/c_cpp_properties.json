{
    "configurations": [
        {
            "name": "Linux",
            "includePath": [
                "${workspaceFolder}/**"
            ],
            "defines": [],
            "compilerPath": "/usr/bin/gcc",
            "cStandard": "gnu11",
            "cppStandard": "gnu++14",
            "intelliSenseMode": "clang-x64"
        }
    ],
    "version": 4,
    
    "workbench.colorTheme": "Dracula Soft",
    "workbench.iconTheme": "vscode-icons",
    "editor.fontSize": 12.5,
    ""{
    "editor.fontFamily": "'FiraCode-Retina'",
    "window.zoomLevel": -1,
    "search.exclude": {
        "**/node_modules": true,
        "**/bower_components": true,
        "**/*.code-search": true
    },
    "editor.fontLigatures": true,
    "todohighlight.include": [
        "**/*.js",
        "**/*.jsx",
        "**/*.ts",
        "**/*.tsx",
        "**/*.html",
        "**/*.php",
        "**/*.css",
        "**/*.scss",
        "**/*.cs"
    ],
    "files.associations": {
    "*.csproj": "msbuild"
},
{
    "dotnet-test-explorer.enableTelemetry": false
},
{
    "dotnet.enableTelemetry": false
},
{
  "auto-rename-tag.activationOnLanguage": ["html", "xml", "php", "javascript"]
},
"better-comments.tags": [
  {
    "tag": "!",
    "color": "#FF2D00",
    "strikethrough": false,
    "backgroundColor": "transparent"
  },
  {
    "tag": "?",
    "color": "#3498DB",
    "strikethrough": false,
    "backgroundColor": "transparent"
  },
  {
    "tag": "//",
    "color": "#474747",
    "strikethrough": true,
    "backgroundColor": "transparent"
  },
  {
    "tag": "todo",
    "color": "#FF8C00",
    "strikethrough": false,
    "backgroundColor": "transparent"
  },
  {
    "tag": "*",
    "color": "#98C379",
    "strikethrough": false,
    "backgroundColor": "transparent"
  }
],
{
 "bookmarks.navigateThroughAllFiles": true,
   "bookmarks.wrapNavigation": true,
    "bookmarks.saveBookmarksInProject": true,
      "bookmarks.gutterIconPath": "c:\\temp\\othericon.png",
       "bookmarks.backgroundLineColor",
         "bookmarks.showCommandsInContextMenu": true,
          "bookmarks.useWorkaroundForFormatters": true,
           "bookmarks.sideBar.expanded": true,
              "bookmarks.multicursor.toggleMode": "eachLineIndependently",
               "bookmarks.label.suggestion": "useWhenSelected",

}, 
{
  "workbench.colorCustomizations": {
    "bookmarks.lineBackground": "#157EFB22"  
  },
   "workbench.colorCustomizations": {
    "bookmarks.lineBorder": "#FF0000"  
  },
   "workbench.colorCustomizations": {
    "bookmarks.overviewRuler": "#157EFB88"  
  },

},
"emmet.includeLanguages": {
    "aspnetcorerazor": "html"
},
{
    "code-runner.executorMap": {
        "javascript": "node",
        "php": "C:\\php\\php.exe",
        "python": "python",
        "perl": "perl",
        "ruby": "C:\\Ruby23-x64\\bin\\ruby.exe",
        "go": "go run",
        "html": "\"C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe\"",
        "java": "cd $dir && javac $fileName && java $fileNameWithoutExt",
        "c": "cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt"
    }
},
{
    "code-runner.executorMapByGlob": {
        "pom.xml": "cd $dir && mvn clean package",
        "*.test.js": "tap",
        "*.js": "node"
    }
}, 
{
    "code-runner.defaultLanguage": "javascript"
},
{
    "code-runner.executorMapByFileExtension": {
        ".vbs": "cscript //Nologo"
    }
},
{
    "code-runner.customCommand": "echo Hello"
},
{
    "code-runner.cwd": "path/to/working/directory"
},
{
    "code-runner.clearPreviousOutput": false
},
{
    "code-runner.saveAllFilesBeforeRun": false
},
{
    "code-runner.saveFileBeforeRun": false
},
{
    "code-runner.showExecutionMessage": true
},
{
    "code-runner.runInTerminal": false
},
{
    "code-runner.preserveFocus": true
},
{
    "code-runner.enableAppInsights": false
},
{
      "editor.codeActionsOnSave": {
        "source.fixAll": true
    }
},
 {
    "editor.codeActionsOnSave": {
        "source.fixAll.eslint": true
    }
}, 
{
      "editor.codeActionsOnSave": {
        "source.fixAll": true,
        "source.fixAll.eslint": false
    }
}, 

  {
  "eslint.lintTask.options": "-c C:/mydirectory/.eslintrc.json --ignore-path C:/mydirectory/.eslintignore ."
},
{
  "eslint.options": { "configFile": "C:/mydirectory/.eslintrc.json" },
  "eslint.workingDirectories": [ "./client", "./server" ],
      "eslint.workingDirectories": [ "./client", "./server" ],
"[html]": {
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": false
    }
  }

},
"minify.minifyExistingOnSave": false,

"minify.js": {
    "mangle": true,
    "compress": {
        "sequences": true,
        "properties": true,
        "dead_code": true,
        "drop_debugger": true,
        "unsafe": false,
        "unsafe_comps": false,
        "conditionals": true,
        "comparisons": true,
        "evaluate": true,
        "booleans": true,
        "loops": true,
        "unused": true,
        "hoist_funs": true,
        "keep_fargs": true,
        "keep_fnames": false,
        "hoist_vars": false,
        "if_return": true,
        "join_vars": true,
        "collapse_vars": false,
        "reduce_vars": false,
        "side_effects": true,
        "pure_getters": false,
        "pure_funcs": null,
        "negate_iife": false,
        "drop_console": false,
        "passes": 1,
        "global_defs": {}
    },
    "output": {
        "ascii_only": false,
        "inline_script": false,
        "max_line_len": 32000,
        "braces": false,
        "semicolons": true,
        "comments": false,
        "shebang": true,
        "preamble": null,
        "quote_style": "best"
    }
},
"minify.css": {
    "advanced": true,
    "aggressiveMerging": true,
    "compatibility": "*",
    "inliner": {},
    "keepBreaks": false,
    "keepSpecialComments": "*",
    "mediaMerging": true,
    "processImport": true,
    "processImportFrom": ["all"],
    "rebase": true,
    "restructuring": true,
    "root": "${workspaceRoot}",
    "roundingPrecision": 2,
    "semanticMerging": false,
    "shorthandCompacting": true
},
"minify.html": {
    "caseSensitive": false,
    "collapseBooleanAttributes": true,
    "collapseWhitespace": true,
    "conservativeCollapse": false,
    "customAttrAssign": [],
    "customAttrCollapse": "",
    "customAttrSurround": [],
    "customEventAttributes": [ "^on[a-z]{3,}$" ],
    "decodeEntities": false,
    "html5": true,
    "ignoreCustomComments": [ "^!" ],
    "ignoreCustomFragments": ["<%[\\s\\S]*?%>", "<\\?[\\s\\S]*?\\?>"],
    "includeAutoGeneratedTags": true,
    "keepClosingSlash": false,
    "maxLineLength": false,
    "minifyCSS": true, //uses minify.css settings if true
    "minifyJS": true, //uses minify.js settings if true
    "minifyURLs": false,
    "preserveLineBreaks": false,
    "preventAttributesEscaping": false,
    "processConditionalComments": false,
    "processScripts": [],
    "quoteCharacter": "\"",
    "removeAttributeQuotes": false,
    "removeComments": false,
    "removeEmptyAttributes": false,
    "removeEmptyElements": false,
    "removeOptionalTags": false,
    "removeRedundantAttributes": false,
    "removeScriptTypeAttributes": false,
    "removeStyleLinkTypeAttributes": false,
    "sortAttributes": false,
    "sortClassName": false,
    "useShortDoctype": false
},
{ "typescript.suggest.paths": false },
{ "key": ".", "command": "" },
{
    "baseUrl": "src",
}, 
{
  import {} from "src/mymodule";
},
{
    "path-intellisense.extensionOnImport": true,
},
{
   "path-intellisense.showHiddenFiles": true,
} , 
{
    "files.exclude": {
        "**/*.map.js": true
    }
}, 
{
    "path-intellisense.autoSlashAfterDirectory": false,
}, 
{
    "path-intellisense.absolutePathToWorkspace": true,
},
{
    "path-intellisense.mappings": {
        "/": "${workspaceRoot}",
        "lib": "${workspaceRoot}/lib",
        "global": "/Users/dummy/globalLibs"
    },
}, 
{
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "editor.formatOnSave": false,
// Enable per-language
"[javascript]": {
    "editor.formatOnSave": true,

}
}
